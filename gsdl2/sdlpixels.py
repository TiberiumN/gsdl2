import sdl
from _sdl.pixels import *

(
    SDL_PIXELTYPE_UNKNOWN,
    SDL_PIXELTYPE_INDEX1,
    SDL_PIXELTYPE_INDEX4,
    SDL_PIXELTYPE_INDEX8,
    SDL_PIXELTYPE_PACKED8,
    SDL_PIXELTYPE_PACKED16,
    SDL_PIXELTYPE_PACKED32,
    SDL_PIXELTYPE_ARRAYU8,
    SDL_PIXELTYPE_ARRAYU16,
    SDL_PIXELTYPE_ARRAYU32,
    SDL_PIXELTYPE_ARRAYF16,
    SDL_PIXELTYPE_ARRAYF32,
) = range(12)

# define SDL_ALPHA_OPAQUE 255
SDL_ALPHA_OPAQUE = 255

# define SDL_ALPHA_TRANSPARENT 0
SDL_ALPHA_TRANSPARENT = 0


# define SDL_FOURCC(A, B, C, D) \
# ((SDL_static_cast(Uint32, SDL_static_cast(Uint8, (A))) << 0) | \
# (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (B))) << 8) | \
# (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (C))) << 16) | \
# (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (D))) << 24))
def SDL_FOURCC(A, B, C, D):
    return (A << 0) | (B << 8) | (C << 16) | (D << 24)


# define SDL_DEFINE_PIXELFOURCC(A, B, C, D) SDL_FOURCC(A, B, C, D)
def SDL_DEFINE_PIXELFOURCC(A, B, C, D):
    return SDL_FOURCC(A, B, C, D)


define_pixel_fourcc = SDL_DEFINE_PIXELFOURCC


# define SDL_DEFINE_PIXELFORMAT(type, order, layout, bits, bytes) \
# ((1 << 28) | ((type) << 24) | ((order) << 20) | ((layout) << 16) | ((bits) << 8) | ((bytes) << 0))
def SDL_DEFINE_PIXELFORMAT(type_, order, layout, bits, bytes):
    return (1 << 28) | (type_ << 24) | (order << 20) | (layout << 16) | (bits << 8) | (bytes << 0)


define_pixel_format = SDL_DEFINE_PIXELFORMAT

(
    SDL_BITMAPORDER_NONE,
    SDL_BITMAPORDER_4321,
    SDL_BITMAPORDER_1234,
) = range(3)

(
    SDL_PACKEDORDER_NONE,
    SDL_PACKEDORDER_XRGB,
    SDL_PACKEDORDER_RGBX,
    SDL_PACKEDORDER_ARGB,
    SDL_PACKEDORDER_RGBA,
    SDL_PACKEDORDER_XBGR,
    SDL_PACKEDORDER_BGRX,
    SDL_PACKEDORDER_ABGR,
    SDL_PACKEDORDER_BGRA,
) = range(9)

(
    SDL_PACKEDLAYOUT_NONE,
    SDL_PACKEDLAYOUT_332,
    SDL_PACKEDLAYOUT_4444,
    SDL_PACKEDLAYOUT_1555,
    SDL_PACKEDLAYOUT_5551,
    SDL_PACKEDLAYOUT_565,
    SDL_PACKEDLAYOUT_8888,
    SDL_PACKEDLAYOUT_2101010,
    SDL_PACKEDLAYOUT_1010102,
) = range(9)

(
    SDL_ARRAYORDER_NONE,
    SDL_ARRAYORDER_RGB,
    SDL_ARRAYORDER_RGBA,
    SDL_ARRAYORDER_ARGB,
    SDL_ARRAYORDER_BGR,
    SDL_ARRAYORDER_BGRA,
    SDL_ARRAYORDER_ABGR,
) = range(7)

SDL_PIXELFORMAT_UNKNOWN = 0
SDL_PIXELFORMAT_INDEX1LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_4321, 0, 1, 0)
SDL_PIXELFORMAT_INDEX1MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_1234, 0, 1, 0)
SDL_PIXELFORMAT_INDEX4LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_4321, 0, 4, 0)
SDL_PIXELFORMAT_INDEX4MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_1234, 0, 4, 0)
SDL_PIXELFORMAT_INDEX8 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX8, 0, 0, 8, 1)
SDL_PIXELFORMAT_RGB332 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED8, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_332, 8, 1)
SDL_PIXELFORMAT_RGB444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_4444, 12,
                                                2)
SDL_PIXELFORMAT_RGB555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_1555, 15,
                                                2)
SDL_PIXELFORMAT_BGR555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_1555, 15,
                                                2)
SDL_PIXELFORMAT_ARGB4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_4444,
                                                  16, 2)
SDL_PIXELFORMAT_RGBA4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_4444,
                                                  16, 2)
SDL_PIXELFORMAT_ABGR4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_4444,
                                                  16, 2)
SDL_PIXELFORMAT_BGRA4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_4444,
                                                  16, 2)
SDL_PIXELFORMAT_ARGB1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_1555,
                                                  16, 2)
SDL_PIXELFORMAT_RGBA5551 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_5551,
                                                  16, 2)
SDL_PIXELFORMAT_ABGR1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_1555,
                                                  16, 2)
SDL_PIXELFORMAT_BGRA5551 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_5551,
                                                  16, 2)
SDL_PIXELFORMAT_RGB565 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_565, 16,
                                                2)
SDL_PIXELFORMAT_BGR565 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_565, 16,
                                                2)
SDL_PIXELFORMAT_RGB24 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_RGB, 0, 24, 3)
SDL_PIXELFORMAT_BGR24 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_BGR, 0, 24, 3)
SDL_PIXELFORMAT_RGB888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_8888, 24,
                                                4)
SDL_PIXELFORMAT_RGBX8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBX, SDL_PACKEDLAYOUT_8888,
                                                  24, 4)
SDL_PIXELFORMAT_BGR888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_8888, 24,
                                                4)
SDL_PIXELFORMAT_BGRX8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRX, SDL_PACKEDLAYOUT_8888,
                                                  24, 4)
SDL_PIXELFORMAT_ARGB8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_8888,
                                                  32, 4)
SDL_PIXELFORMAT_RGBA8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_8888,
                                                  32, 4)
SDL_PIXELFORMAT_ABGR8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_8888,
                                                  32, 4)
SDL_PIXELFORMAT_BGRA8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_8888,
                                                  32, 4)
SDL_PIXELFORMAT_ARGB2101010 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB,
                                                     SDL_PACKEDLAYOUT_2101010, 32, 4)


# SDL_PIXELFORMAT_YV12 = SDL_DEFINE_PIXELFOURCC('Y', 'V', '1', '2')
# SDL_PIXELFORMAT_IYUV = SDL_DEFINE_PIXELFOURCC('I', 'Y', 'U', 'V')
# SDL_PIXELFORMAT_YUY2 = SDL_DEFINE_PIXELFOURCC('Y', 'U', 'Y', '2')
# SDL_PIXELFORMAT_UYVY = SDL_DEFINE_PIXELFOURCC('U', 'Y', 'V', 'Y')
# SDL_PIXELFORMAT_YVYU = SDL_DEFINE_PIXELFOURCC('Y', 'V', 'Y', 'U')

# define SDL_PIXELFLAG(X)    (((X) >> 28) & 0x0F)
def SDL_PIXELFLAG(X):
    return (X >> 28) & 0x0F


pixel_flag = SDL_PIXELFLAG


# define SDL_PIXELTYPE(X)    (((X) >> 24) & 0x0F)
def SDL_PIXELTYPE(X):
    return (X >> 24) & 0x0F


pixel_type = SDL_PIXELTYPE


# define SDL_PIXELORDER(X)   (((X) >> 20) & 0x0F)
def SDL_PIXELORDER(X):
    return (X >> 20) & 0x0F


pixel_order = SDL_PIXELORDER


# define SDL_PIXELLAYOUT(X)  (((X) >> 16) & 0x0F)
def SDL_PIXELLAYOUT(X):
    return (X >> 16) & 0x0F


pixel_layout = SDL_PIXELLAYOUT


# define SDL_BITSPERPIXEL(X) (((X) >> 8) & 0xFF)
def SDL_BITSPERPIXEL(X):
    return (X >> 8) & 0xFF


bits_per_pixel = SDL_BITSPERPIXEL


# define SDL_BYTESPERPIXEL(X) \
# (SDL_ISPIXELFORMAT_FOURCC(X) ? \
#   ((((X) == SDL_PIXELFORMAT_YUY2) || ((X) == SDL_PIXELFORMAT_UYVY) || ((X) == SDL_PIXELFORMAT_YVYU)) ? \
#   2 : 1) : \
# (((X) >> 0) & 0xFF))
def SDL_BYTESPERPIXEL(X):
    if SDL_ISPIXELFORMAT_FOURCC(X):
        if X == SDL_PIXELFORMAT_YUY2 or X == SDL_PIXELFORMAT_UYVY or X == SDL_PIXELFORMAT_YVYU:
            return 2
        else:
            return 1
    else:
        return (X >> 0) & 0xFF


bytes_per_pixel = SDL_BYTESPERPIXEL


# define SDL_ISPIXELFORMAT_INDEXED(format)   \
# (!SDL_ISPIXELFORMAT_FOURCC(format) && \
# ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) || \
# (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4) || \
# (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8)))
def SDL_ISPIXELFORMAT_INDEXED(format):
    return (not SDL_ISPIXELFORMAT_FOURCC(format) and
            ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) or
             (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4) or
             (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8)))


is_pixel_format_indexed = SDL_ISPIXELFORMAT_INDEXED


# define SDL_ISPIXELFORMAT_ALPHA(format) \
# (!SDL_ISPIXELFORMAT_FOURCC(format) && \
# ((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) || \
# (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA) || \
# (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR) || \
# (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA)))
def SDL_ISPIXELFORMAT_ALPHA(format):
    return not (SDL_ISPIXELFORMAT_FOURCC(format) and
                ((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) or
                 (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA) or
                 (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR) or
                 (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA)))


is_pixel_format_alpha = SDL_ISPIXELFORMAT_ALPHA


# define SDL_ISPIXELFORMAT_FOURCC(format) ((format) && (SDL_PIXELFLAG(format) != 1))
def SDL_ISPIXELFORMAT_FOURCC(format):
    return not (format and SDL_PIXELFLAG(format))


is_pixel_format_fourcc = SDL_ISPIXELFORMAT_FOURCC


def pixel_format_name(format):
    ret = sdl.ffi.string(sdl.getPixelFormatName(format)).decode('utf-8')
    return ret


name_to_order = {
    'ABGR': 7,
    'ARGB': 3,
    'BGRA': 8,
    'BGRX': 6,
    'NONE': 0,
    'RGBA': 4,
    'RGBX': 2,
    'XBGR': 5,
    'XRGB': 1,
}
order_to_name = {
    7: 'ABGR',
    3: 'ARGB',
    8: 'BGRA',
    6: 'BGRX',
    0: 'NONE',
    4: 'RGBA',
    2: 'RGBX',
    5: 'XBGR',
    1: 'XRGB',
}

name_to_layout = {
    '1010102': 8,
    '1555': 3,
    '2101010': 7,
    '332': 1,
    '4444': 2,
    '5551': 4,
    '565': 5,
    '8888': 6,
    'NONE': 0,
}
layout_to_name = {
    8: '1010102',
    3: '1555',
    7: '2101010',
    1: '332',
    2: '4444',
    4: '5551',
    5: '565',
    6: '8888',
    0: 'NONE',
}

name_to_format = {
    'ABGR1555': 359862274,
    'ABGR4444': 359796738,
    'ABGR8888': 376840196,
    'ARGB1555': 355667970,
    'ARGB2101010': 372711428,
    'ARGB4444': 355602434,
    'ARGB8888': 372645892,
    'BGR24': 390076419,
    'BGR555': 357764866,
    'BGR565': 357896194,
    'BGR888': 374740996,
    'BGRA4444': 360845314,
    'BGRA5551': 360976386,
    'BGRA8888': 377888772,
    'BGRX8888': 375789572,
    'INDEX1LSB': 286261504,
    'INDEX1MSB': 287310080,
    'INDEX4LSB': 303039488,
    'INDEX4MSB': 304088064,
    'INDEX8': 318769153,
    'IYUV': 1448433993,
    'RGB24': 386930691,
    'RGB332': 336660481,
    'RGB444': 353504258,
    'RGB555': 353570562,
    'RGB565': 353701890,
    'RGB888': 370546692,
    'RGBA4444': 356651010,
    'RGBA5551': 356782082,
    'RGBA8888': 373694468,
    'RGBX8888': 371595268,
    'UNKNOWN': 0,
    'UYVY': 1498831189,
    'YUY2': 844715353,
    'YV12': 842094169,
    'YVYU': 1431918169,
}
format_to_name = {
    359862274: 'ABGR1555',
    359796738: 'ABGR4444',
    376840196: 'ABGR8888',
    355667970: 'ARGB1555',
    372711428: 'ARGB2101010',
    355602434: 'ARGB4444',
    372645892: 'ARGB8888',
    390076419: 'BGR24',
    357764866: 'BGR555',
    357896194: 'BGR565',
    374740996: 'BGR888',
    360845314: 'BGRA4444',
    360976386: 'BGRA5551',
    377888772: 'BGRA8888',
    375789572: 'BGRX8888',
    286261504: 'INDEX1LSB',
    287310080: 'INDEX1MSB',
    303039488: 'INDEX4LSB',
    304088064: 'INDEX4MSB',
    318769153: 'INDEX8',
    1448433993: 'IYUV',
    386930691: 'RGB24',
    336660481: 'RGB332',
    353504258: 'RGB444',
    353570562: 'RGB555',
    353701890: 'RGB565',
    370546692: 'RGB888',
    356651010: 'RGBA4444',
    356782082: 'RGBA5551',
    373694468: 'RGBA8888',
    371595268: 'RGBX8888',
    0: 'UNKNOWN',
    1498831189: 'UYVY',
    844715353: 'YUY2',
    842094169: 'YV12',
    1431918169: 'YVYU',
}
